# version: '2'
# services:
#   api:
#     build: .
#     container_name: api
#     command: bash -c "cd /src/rest && python manage.py runserver 0.0.0.0:8000"
#     ports:
#       - "8000:8000"
#     volumes:
#       - C:/Python_Assignment/abd_test/tmp:/tmp
#       - C:/Python_Assignment/abd_test/src:/src
#     environment:
#       - MONGO_HOST=host.docker.internal
#       - MONGO_PORT=27017

#   app:
#     build: .
#     container_name: app
#     command: bash -c "cd /src/app && yarn install && yarn start"
#     ports:
#       - "3000:3000"
#     volumes:
#       - C:/Python_Assignment/abd_test/src:/src
#     environment:
#       - MONGO_HOST=host.docker.internal
#       - MONGO_PORT=27017

#   # mongo:
#   #   build: .
#   #   container_name: mongo
#   #   restart: always
#   #   ports:
#   #     - "27017:27017"
#   #   volumes:
#   #     - C:/Python_Assignment/abd_test/src/db/:/data/db
#   #   command: /usr/bin/mongod --bind_ip_all

    
version: '2'
services:
  api:
    build: .
    container_name: api
    command: bash -c "cd /src/rest && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - C:/Python_Assignment/adb_test/tmp:/tmp
      - C:/Python_Assignment/adb_test/src:/src
    environment:
      - MONGO_HOST=mongo
      - MONGO_PORT=27017

  app:
    build: .
    container_name: app
    command: bash -c "cd /src/app && yarn install && yarn start"
    ports:
      - "3000:3000"
    volumes:
      - C:/Python_Assignment/adb_test/src:/src
    environment:
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
  mongo:
    image: mongo:4.4
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - C:/Python_Assignment/adb_test/src/db:/data/db
    command: mongod --bind_ip_all
