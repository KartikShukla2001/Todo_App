[{"/src/app/src/index.js":"1","/src/app/src/App.js":"2","/src/app/src/reportWebVitals.js":"3"},{"size":517,"mtime":1718077300769,"results":"4","hashOfConfig":"5"},{"size":2287,"mtime":1718096670492,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1718077300770,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8s7oda",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/src/app/src/index.js",[],"/src/app/src/App.js",["15"],"import './App.css';\r\nimport logo from './logo.svg';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst TodoList = ({ todos }) => {\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => (\r\n        <li key={todo._id}>{todo.description}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst TodoForm = ({ setTodos }) => {\r\n  const [todo, setTodo] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:8000/todos/?task=todo', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ description: todo }),\r\n      });\r\n      if (response.ok) {\r\n        console.log('Todo added successfully');\r\n        setTodo('');\r\n\r\n        // Fetch updated list of todos after successful POST request\r\n        const updatedResponse = await fetch('http://localhost:8000/todos/');\r\n        if (updatedResponse.ok) {\r\n          const updatedData = await updatedResponse.json();\r\n          setTodos(updatedData);\r\n        } else {\r\n          console.error('Failed to fetch updated todos');\r\n        }\r\n      } else {\r\n        console.error('Failed to add todo');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={todo}\r\n        onChange={(e) => setTodo(e.target.value)}\r\n        placeholder=\"Enter TODO description\"\r\n      />\r\n      <button type=\"submit\">Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport function App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/todos/');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTodos(data);\r\n        } else {\r\n          console.error('Failed to fetch todos');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>TODO List</h1>\r\n      <TodoList todos={todos} />\r\n      <h1>TODO Form</h1>\r\n      <TodoForm setTodos={setTodos} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/src/app/src/reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":2,"column":8,"nodeType":"18","messageId":"19","endLine":2,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]